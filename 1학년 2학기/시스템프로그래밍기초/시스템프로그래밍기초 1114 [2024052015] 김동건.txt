시스템프로그래밍기초 1114 [2024052015] 김동건

//#include <stdio.h>
//#define CRT_SECURE_NO_WARNINGS
//
////int main()
////{
////    const int x = 30;
////    //  x = 50; // Error
////
////    int y = 50;
////    const int* p;
////    p = &y;  // y와 p 연결
////    int z = *p; //읽어 오기(참조해서 읽는 것은 가능)
////    //*p = 5000; // 쓰는 것은 불가능
////
////    int* const ptr = &y;
////    z = *ptr;  // 가능
////    *ptr = 5000;  // 가능
////
////    //ptr = &z;  // 다른 포인터 대입 불가능
////
////    const int* const pptr = &y;
////
////    //pptr = &z;  //Error
////    //*pptr = 6000; //Error
////
////    return 1;
////}
//
////int main() {
////
////	int arr []  = {5, 10, 15, 20 ,25};
////	int* p;
////
////	//printf("%p \n", &arr[0]); // 배열의 원소의 첫번쨰의 주소
////	//printf("%p \n", arr); // 배열의 이름을 포인터로 출력
////	//printf("%p \n", arr + 1);  // +1 은 4바이트 차이
////	//printf("%p \n", &arr); // 
////	//printf("%p \n", &arr + 1); // +1 은 정수 5개 ( 20 바이트 차이 )
////
////	// 배열이 다르다 => 주소값이 다르던지 대상체가 다르던디
////
////	printf("%d \n", arr[0]); // arr[0] == *(arr + 0) == *arr
////	printf("%d \n", *(arr + 0)); // arr[0] == *(arr + 0) == *arr
////	printf("%d \n", *(arr)); // arr[0] == *(arr + 0) == *arr
////
////	p = arr;
////	for (int i = 0; i < 5; i++) {
////		//printf("%d, ", p[i]);
////		printf("%d, ", *(p+i));
////	}
////	printf("\n");
////
////	p = arr;
////	for (int i = 0; i < 5; i++) {
////		printf("%d ,", *p++);
////	}
////	printf("\n");
////
////	p = arr;
////	for (int i = 0; i < 5; i++) {
////		printf("%d ,", (*p)++);
////	}
////	printf("\n");
////
////	return 1;
////}
//
//
////==========EX 11-2======
//
////#define MAX 5
////
////int main() {
////
////	int sum, * p, arr[MAX] = { 5,10,15,20, 25 };
////
////	sum = 0;
////	for (p = arr; p < &arr[MAX]; p++)
////		sum += *p;
////	printf("%d \n", sum);
////
////	sum = 0;  p = arr;
////	for (int i = 0; i < MAX; i++)
////		//sum += *(p + i);
////		sum += p[i];
////	printf("%d \n", sum);
////	
////
////	return 1;
////
////}
//
////============== 11 -1 ================
//#include <stdlib.h>  // rand() , RAND_MAX
//#include <time.h>  // time()
//
//int main() {
//
//	srand(time(NULL));
//
//	for (int i = 0; i < 4; i++)
//		printf("%d ,", rand() % 45 + 1);
//	printf("\n");
//
//	return 1;
//}